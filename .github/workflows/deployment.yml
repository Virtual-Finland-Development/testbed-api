name: Deploy a stage

on:
  workflow_call:
    inputs:
      deployment_stage:
        required: true
        type: string
    secrets:
      PULUMI_ACCESS_TOKEN:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

env:
  pulumi_stack_organization: virtualfinland
  aws_region: eu-north-1

jobs:
  build-and-test:
    uses: Virtual-Finland-Development/testbed-api/.github/workflows/build-and-test.yml@main
    with:
      deployment_stage: ${{ inputs.deployment_stage }}
      wants_artifacts: true
  deploy:
    name: Deployment 🔧🏹🧬🌀📡⛅🚀✨
    environment: ${{ inputs.deployment_stage }}
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - uses: actions/checkout@v3
      - name: Download the built artifact 🐪
        uses: actions/download-artifact@v3
        with:
          name: build-artifact-${{ inputs.deployment_stage }}
          path: infra/build
      - name: Display structure of downloaded artifact files 🐪🔍
        run: |
          ls -R infra/build
      - name: Setup Python 🪄
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install dependencies 📦️
        run: pip install -r infra/requirements.txt
      - name: Configure AWS credentials 🎲
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.aws_region }}
      - name: Deploy with Pulumi ✨
        uses: pulumi/actions@v3
        with:
          work-dir: ./infra
          command: up
          stack-name: ${{ env.pulumi_stack_organization }}/${{ inputs.deployment_stage }}
          upsert: true # create stack if no exists
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
      - name: Tag the deployment
        uses: Virtual-Finland-Development/automatic-release-action@v1.0
        if: ${{ inputs.environment == 'staging' }}
        with:
          environment: ${{ inputs.environment }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
