openapi: 3.0.3
info:
  title: Testbed API
  description: |-
    Testebed API documentation
  version: 1.0.0
paths:
  /:
    get:
      responses:
        "303":
          description: Redirect to swagger docs at /docs
  /health:
    get:
      responses:
        "200":
          description: Health check response
          content:
            text/plain:
              example: "OK"
  /wake-up:
    get:
      responses:
        "200":
          description: Wake up response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WakeUpResponse"
  /docs:
    get:
      responses:
        "200":
          description: Swagger docs
  /testbed/reverse-proxy:
    post:
      operationId: testbed-reverse-proxy
      requestBody:
        description: The request package
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProxyRequestInput"
      responses:
        "200":
          description: Proxy response
  /testbed/productizers/get-population:
    post:
      operationId: get-population
      requestBody:
        description: The population figure query
        content:
          application/json:
            schema:
              type: object
            examples:
              success:
                summary: JSON example
                value: Loading...
                externalValue: "https://raw.githubusercontent.com/Virtual-Finland/definitions/main/DataProducts/test/lsipii/Figure/Population.json"
      responses:
        "200":
          description: Population figure response
          content:
            application/json:
              schema:
                type: object
              examples:
                success:
                  summary: JSON example
                  value: Loading...
                  externalValue: "https://raw.githubusercontent.com/Virtual-Finland/definitions/main/DataProducts/test/lsipii/Figure/Population.json"
  /testbed/productizers/find-job-postings:
    post:
      operationId: find-job-postings
      requestBody:
        description: The job postings query
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JobsRequestFromFrontend"
      responses:
        "200":
          description: The job postings
          content:
            application/json:
              schema:
                type: object
              examples:
                success:
                  summary: JSON example
                  value: Loading...
                  externalValue: "https://raw.githubusercontent.com/Virtual-Finland/definitions/main/DataProducts/test/lassipatanen/Job/JobPosting.json"
  /testbed/productizers/user-profile:
    post:
      operationId: user-profile
      requestBody:
        description: The user profile query
        content:
          application/json:
            schema:
              type: object
            examples:
              success:
                summary: JSON example
                value: Loading...
                externalValue: "https://raw.githubusercontent.com/Virtual-Finland/definitions/main/DataProducts/test/lassipatanen/User/Profile.json"
      responses:
        "200":
          description: The user profile response
          content:
            application/json:
              schema:
                type: object
              examples:
                success:
                  summary: JSON example
                  value: Loading...
                  externalValue: "https://raw.githubusercontent.com/Virtual-Finland/definitions/main/DataProducts/test/lassipatanen/User/Profile.json"
  /testbed/productizers/fetch-user-status-info:
    post:
      operationId: fetch-user-status-info
      requestBody:
        description: Fetch user status info
        content:
          application/json:
            schema:
              type: object
            examples:
              success:
                summary: JSON example
                value: Loading...
                externalValue: "https://raw.githubusercontent.com/Virtual-Finland/definitions/main/DataProducts/test/lsipii/User/StatusInfo.json"
      responses:
        "200":
          description: Status information response
          content:
            application/json:
              schema:
                type: object
              examples:
                success:
                  summary: JSON example
                  value: Loading...
                  externalValue: "https://raw.githubusercontent.com/Virtual-Finland/definitions/main/DataProducts/test/lsipii/User/StatusInfo.json"
  /testbed/productizers/update-user-status-info:
    post:
      operationId: update-user-status-info
      requestBody:
        description: Post / update user status info
        content:
          application/json:
            schema:
              type: object
            examples:
              success:
                summary: JSON example
                value: Loading...
                externalValue: "https://raw.githubusercontent.com/Virtual-Finland/definitions/main/DataProducts/test/lsipii/User/StatusInfo/Write.json"
      responses:
        "200":
          description: Status information response
          content:
            application/json:
              schema:
                type: object
              examples:
                success:
                  summary: JSON example
                  value: Loading...
                  externalValue: "https://raw.githubusercontent.com/Virtual-Finland/definitions/main/DataProducts/test/lsipii/User/StatusInfo/Write.json"
  /jmf/recommendations:
    post:
      operationId: jmf-recommendations
      requestBody:
        description: Job Market Finland recommended skills and occupations
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JmfRequest"
      responses:
        "200":
          description: The recommendations response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JmfResponse"
components:
  schemas:
    ProxyRequestInput:
      type: object
      properties:
        method:
          type: string
          description: Request method
          example: POST
          enum:
            - GET
            - POST
            - PUT
            - DELETE
        url:
          type: string
          example: https://gateway.testbed.fi/action
        body:
          type: string
        headers:
          type: object
    JobsRequestFromFrontend:
      type: object
      properties:
        query:
          type: string
          description: Search phrase
          example: Chef
        location:
          $ref: "#/components/schemas/RequestLocation"
        requirements:
          $ref: "#/components/schemas/RequestRequirements"
        paging:
          $ref: "#/components/schemas/RequestPagingFromFrontend"
    RequestLocation:
      type: object
      properties:
        countries:
          type: array
          items:
            type: string
        regions:
          type: array
          items:
            type: string
        municipalities:
          type: array
          items:
            type: string
    RequestRequirements:
      type: object
      properties:
        occupations:
          type: array
          items:
            type: string
        skills:
          type: array
          items:
            type: string
    RequestPagingFromFrontend:
      type: object
      properties:
        itemsPerPage:
          type: number
          example: 20
        pageNumber:
          type: number
          example: 0
    JmfRequest:
      type: object
      properties:
        text:
          type: string
          description: Search phrase / text content for recommendations
          example: I would like to cook and be the head chef
        maxNumberOfSkills:
          type: number
          example: 1
        maxNumberOfOccupations:
          type: number
          example: 1
        language:
          type: string
          description: ISO 639-1 language code for recommendations
          example: en
    JmfResponse:
      type: object
      properties:
        skills:
          type: array
          items:
            type: object
            properties:
              uri:
                type: string
                example: http://data.europa.eu/esco/skill/f3934441-4bff-4076-9945-e6c51a01c467
              score:
                type: number
                example: 75.28081358264468
              label:
                type: string
                example: use cooking techniques
              skillType:
                type: string
                example: http://data.europa.eu/esco/skill-type/skill
              reuseLevel:
                type: string
                example: http://data.europa.eu/esco/skill-reuse-level/sector-specific
        occupations:
          type: array
          items:
            type: object
            properties:
              uri:
                type: string
                example: http://data.europa.eu/esco/occupation/90f75f67-495d-49fa-ab57-2f320e251d7e
              score:
                type: number
                example: 23.38569658935573
              label:
                type: string
                example: cook
        language:
          type: string
          example: en
    WakeUpResponse:
      type: object
      properties:
        signals:
          type: object
          properties:
            successful:
              type: number
              example: 3
            total:
              type: number
              example: 4
